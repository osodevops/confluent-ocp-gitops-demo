---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: "Confluent on OpenShift GitOps Demo"

# Short description of this project
description: |-
  A end to end demo of setting up Confluent Operator on OpenShift 4

# Canonical GitHub repo
github_repo: osodevops/confluent-openshift-gitops-demo

# How to use this project
usage: |-
  ### Overview
  TODO
  
  ### Diagram

# Example usage
examples: |-
  ### Getting Started
  #### Requirements
  * [Red Hat login](https://sso.redhat.com/auth/realms/redhat-external/login-actions/registration?client_id=cloud-services&tab_id=DeYAMfKt5Mo)
  * [OpenShift CLI](https://formulae.brew.sh/formula/openshift-cli)
  * [Flux CLI](https://fluxcd.io/docs/cmd/)
  * [k9s](https://github.com/derailed/k9s) (optional but good idea)
  * AWS Account ID
  * Permission to create a new IAM user with access key and secret

  ### Pre-Deployment Tasks
  * Login to your AWS account and create a new user with the username `osdCcsAdmin`` and attached administrator permissions. NOTE: The username has to be exactly that value. Enable programmatically access and download the access key and secret - you will need them in part 1. 
  * Fork [confluent-openshift-gitops-demo](https://github.com/osodevops/confluent-openshift-gitops-demo) repository into your own GitHub account and clone to your local machine
  * Fork [team-alpha-resources](https://github.com/osodevops/confluent-openshift-team-alpha-resources) repository into your own GitHub account and clone to your local machine

  ### 1. Create a OpenShift cluster
   Login and navigate to the [Clusters](https://console.redhat.com/openshift) section in the Red Hat Console. Here you can create a trial cluster on AWS or GCP, for this example we will be using AWS:
    - Click Create trial cluster and select AWS.
    - View and accept the terms and conditions. (this is mandatory to proceed) 
    - Complete the form with mandatory information (AWS account ID / Access key and secret / Cluster name / Region)
    - Select Single zone and 8 vCPU 32GiB RAM
    - Keep everything else as default and and click create. Kick back and make yourself a coffee or three - creating the cluster takes around ~30 minutes.

  ### 2. Connecting to the cluster
  - Navigate to the [clusters section](https://console.redhat.com/openshift/) in the and select the cluster you created in step 1. Before you can login, we need to configure an OAuth provider. 
  - Select the Access control tab and then Identity providers. Click Add identity provider and select HTPasswd. This should present you with an auto generated set of credentials. Node these down as you will need them to obtain the token which authenticates you against the control plane API.
  - Next you will need to manually give the admin-xxx user Cluster administrative access. Click Cluster Roles and Access, Add user. Paste the newly created admin-xxx user in and select cluster-admins. Click add user.
  - Now we have setup the auth provider we can log into the cluster. Click Open console on the top right. This will open a new window, where you can enter in the credentials from the previous step.
  - Once logged into the cluster you should ensure you are running in Administrator mode, which you can select at the top left.  Now we can configure out OC CLI tool to connect to our cluster. At the top right of the console click admin-xxx and then select Copy login command.
  - This will present you with (another) login page, you need to authenticate again with the same credentials. Once successful you will be presented with a Display Token link, click that which will display a command that looks something like this:
    ```shell
      oc login --token=sha256~6CUsCy7sFt3-_xxxxxxxxxxxxxxxxxxxxxxxxx --server=https://api.xxx-demo.3wg2.p1.openshiftapps.com:6443
    ```
  - Copy the full command and open your terminal window. Paste and run this command and away you go. It should look something like this:
    ```shell
      Logged into "https://api.xxx-demo.3wg2.p1.openshiftapps.com:6443" as "admin-TQ0NzM" using the token provided.
  
      You don't have any projects. You can try to create a new project, by running
  
      oc new-project <projectname>
    ```
  - You can verify you have the correct permissions but running:
    ```shell
      âžœ  ~ kubectl get pods -A | wc -l
           314
    ```

related:
  - name: "Confluent for Kubernetes (CFK) examples"
    description: "Playground for Kafka / Confluent Kubernetes experimentations"
    url: "https://github.com/osodevops/confluent-kubernetes-playground"